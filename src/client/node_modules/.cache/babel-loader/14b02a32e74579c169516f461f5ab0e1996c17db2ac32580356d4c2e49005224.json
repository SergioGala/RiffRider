{"ast":null,"code":"/**\r\n * @license lucide-react v0.439.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\nconst Icon = forwardRef(({\n  color = \"currentColor\",\n  size = 24,\n  strokeWidth = 2,\n  absoluteStrokeWidth,\n  className = \"\",\n  children,\n  iconNode,\n  ...rest\n}, ref) => {\n  return createElement(\"svg\", {\n    ref,\n    ...defaultAttributes,\n    width: size,\n    height: size,\n    stroke: color,\n    strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n    className: mergeClasses(\"lucide\", className),\n    ...rest\n  }, [...iconNode.map(([tag, attrs]) => createElement(tag, attrs)), ...(Array.isArray(children) ? children : [children])]);\n});\nexport { Icon as default };","map":{"version":3,"names":["Icon","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","className","children","iconNode","rest","ref","createElement","defaultAttributes","width","height","stroke","Number","mergeClasses","map","tag","attrs","Array","isArray"],"sources":["C:\\Users\\Sergio\\Desktop\\RiffRider\\node_modules\\lucide-react\\src\\Icon.ts"],"sourcesContent":["import { createElement, forwardRef } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport { IconNode, LucideProps } from './types';\nimport { mergeClasses } from '@lucide/shared';\n\ninterface IconComponentProps extends LucideProps {\n  iconNode: IconNode;\n}\n\n/**\n * Lucide icon component\n *\n * @component Icon\n * @param {object} props\n * @param {string} props.color - The color of the icon\n * @param {number} props.size - The size of the icon\n * @param {number} props.strokeWidth - The stroke width of the icon\n * @param {boolean} props.absoluteStrokeWidth - Whether to use absolute stroke width\n * @param {string} props.className - The class name of the icon\n * @param {IconNode} props.children - The children of the icon\n * @param {IconNode} props.iconNode - The icon node of the icon\n *\n * @returns {ForwardRefExoticComponent} LucideIcon\n */\nconst Icon = forwardRef<SVGSVGElement, IconComponentProps>(\n  (\n    {\n      color = 'currentColor',\n      size = 24,\n      strokeWidth = 2,\n      absoluteStrokeWidth,\n      className = '',\n      children,\n      iconNode,\n      ...rest\n    },\n    ref,\n  ) => {\n    return createElement(\n      'svg',\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? (Number(strokeWidth) * 24) / Number(size) : strokeWidth,\n        className: mergeClasses('lucide', className),\n        ...rest,\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...(Array.isArray(children) ? children : [children]),\n      ],\n    );\n  },\n);\n\nexport default Icon;\n"],"mappings":";;;;;;;;;;AAwBA,MAAMA,IAAO,GAAAC,UAAA,CACX,CACE;EACEC,KAAQ;EACRC,IAAO;EACPC,WAAc;EACdC,mBAAA;EACAC,SAAY;EACZC,QAAA;EACAC,QAAA;EACA,GAAGC;AAAA,GAELC,GACG;EACI,OAAAC,aAAA,CACL,OACA;IACED,GAAA;IACA,GAAGE,iBAAA;IACHC,KAAO,EAAAV,IAAA;IACPW,MAAQ,EAAAX,IAAA;IACRY,MAAQ,EAAAb,KAAA;IACRE,WAAA,EAAaC,mBAAA,GAAuBW,MAAO,CAAAZ,WAAW,IAAI,EAAM,GAAAY,MAAA,CAAOb,IAAI,CAAI,GAAAC,WAAA;IAC/EE,SAAA,EAAWW,YAAa,WAAUX,SAAS;IAC3C,GAAGG;EACL,GACA,CACE,GAAGD,QAAS,CAAAU,GAAA,CAAI,CAAC,CAACC,GAAK,EAAAC,KAAK,CAAM,KAAAT,aAAA,CAAcQ,GAAK,EAAAC,KAAK,CAAC,GAC3D,IAAIC,KAAM,CAAAC,OAAA,CAAQf,QAAQ,CAAI,GAAAA,QAAA,GAAW,CAACA,QAAQ,GACpD,CACF;AACF,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}