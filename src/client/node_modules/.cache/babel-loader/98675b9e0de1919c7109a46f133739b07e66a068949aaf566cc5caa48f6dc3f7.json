{"ast":null,"code":"var _jsxFileName = \"/workspaces/RiffRider/src/client/src/components/PartyMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PartyMode = ({\n  isActive\n}) => {\n  _s();\n  const [gridLines, setGridLines] = useState([]);\n  const [pulses, setPulses] = useState([]);\n  const [glitches, setGlitches] = useState([]);\n  const [waveforms, setWaveforms] = useState([]);\n  const colors = ['#00FFFF', '#39FF14', '#00FF00', '#0000FF'];\n  const createGridLine = useCallback(() => {\n    const newLine = {\n      id: Date.now(),\n      isHorizontal: Math.random() > 0.5,\n      position: `${Math.random() * 100}%`,\n      color: colors[Math.floor(Math.random() * colors.length)]\n    };\n    setGridLines(prev => [...prev, newLine]);\n    setTimeout(() => {\n      setGridLines(prev => prev.filter(line => line.id !== newLine.id));\n    }, 2000);\n  }, []);\n  const createPulse = useCallback(() => {\n    const newPulse = {\n      id: Date.now(),\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 100 + 50,\n      color: colors[Math.floor(Math.random() * colors.length)]\n    };\n    setPulses(prev => [...prev, newPulse]);\n    setTimeout(() => {\n      setPulses(prev => prev.filter(pulse => pulse.id !== newPulse.id));\n    }, 1000);\n  }, []);\n  const createGlitch = useCallback(() => {\n    const newGlitch = {\n      id: Date.now(),\n      top: `${Math.random() * 100}%`,\n      left: `${Math.random() * 100}%`,\n      width: `${Math.random() * 20 + 10}%`,\n      height: `${Math.random() * 5 + 2}px`,\n      color: colors[Math.floor(Math.random() * colors.length)]\n    };\n    setGlitches(prev => [...prev, newGlitch]);\n    setTimeout(() => {\n      setGlitches(prev => prev.filter(glitch => glitch.id !== newGlitch.id));\n    }, 150);\n  }, []);\n  const createWaveform = useCallback(() => {\n    const newWaveform = {\n      id: Date.now(),\n      bottom: `${Math.random() * 20}%`,\n      color: colors[Math.floor(Math.random() * colors.length)]\n    };\n    setWaveforms(prev => [...prev, newWaveform]);\n    setTimeout(() => {\n      setWaveforms(prev => prev.filter(wave => wave.id !== newWaveform.id));\n    }, 3000);\n  }, []);\n  useEffect(() => {\n    if (!isActive) return;\n    const gridInterval = setInterval(createGridLine, 200);\n    const pulseInterval = setInterval(createPulse, 500);\n    const glitchInterval = setInterval(createGlitch, 100);\n    const waveformInterval = setInterval(createWaveform, 1000);\n    return () => {\n      clearInterval(gridInterval);\n      clearInterval(pulseInterval);\n      clearInterval(glitchInterval);\n      clearInterval(waveformInterval);\n    };\n  }, [isActive, createGridLine, createPulse, createGlitch, createWaveform]);\n  if (!isActive) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"party-mode techno\",\n    children: [gridLines.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid-line ${line.isHorizontal ? 'horizontal' : 'vertical'}`,\n      style: {\n        [line.isHorizontal ? 'top' : 'left']: line.position,\n        backgroundColor: line.color\n      }\n    }, line.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)), pulses.map(pulse => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pulse\",\n      style: {\n        left: `${pulse.x}%`,\n        top: `${pulse.y}%`,\n        width: `${pulse.size}px`,\n        height: `${pulse.size}px`,\n        borderColor: pulse.color\n      }\n    }, pulse.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)), glitches.map(glitch => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glitch\",\n      style: {\n        top: glitch.top,\n        left: glitch.left,\n        width: glitch.width,\n        height: glitch.height,\n        backgroundColor: glitch.color\n      }\n    }, glitch.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)), waveforms.map(wave => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waveform\",\n      style: {\n        bottom: wave.bottom,\n        backgroundColor: wave.color\n      }\n    }, wave.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(PartyMode, \"4FDorE4SsFwWfbnsLguMtU0rgQA=\");\n_c = PartyMode;\nexport default PartyMode;\nvar _c;\n$RefreshReg$(_c, \"PartyMode\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","PartyMode","isActive","_s","gridLines","setGridLines","pulses","setPulses","glitches","setGlitches","waveforms","setWaveforms","colors","createGridLine","newLine","id","Date","now","isHorizontal","Math","random","position","color","floor","length","prev","setTimeout","filter","line","createPulse","newPulse","x","y","size","pulse","createGlitch","newGlitch","top","left","width","height","glitch","createWaveform","newWaveform","bottom","wave","gridInterval","setInterval","pulseInterval","glitchInterval","waveformInterval","clearInterval","className","children","map","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","_c","$RefreshReg$"],"sources":["/workspaces/RiffRider/src/client/src/components/PartyMode.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst PartyMode = ({ isActive }) => {\n  const [gridLines, setGridLines] = useState([]);\n  const [pulses, setPulses] = useState([]);\n  const [glitches, setGlitches] = useState([]);\n  const [waveforms, setWaveforms] = useState([]);\n\n  const colors = ['#00FFFF', '#39FF14', '#00FF00', '#0000FF'];\n\n  const createGridLine = useCallback(() => {\n    const newLine = {\n      id: Date.now(),\n      isHorizontal: Math.random() > 0.5,\n      position: `${Math.random() * 100}%`,\n      color: colors[Math.floor(Math.random() * colors.length)],\n    };\n    setGridLines(prev => [...prev, newLine]);\n    setTimeout(() => {\n      setGridLines(prev => prev.filter(line => line.id !== newLine.id));\n    }, 2000);\n  }, []);\n\n  const createPulse = useCallback(() => {\n    const newPulse = {\n      id: Date.now(),\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 100 + 50,\n      color: colors[Math.floor(Math.random() * colors.length)],\n    };\n    setPulses(prev => [...prev, newPulse]);\n    setTimeout(() => {\n      setPulses(prev => prev.filter(pulse => pulse.id !== newPulse.id));\n    }, 1000);\n  }, []);\n\n  const createGlitch = useCallback(() => {\n    const newGlitch = {\n      id: Date.now(),\n      top: `${Math.random() * 100}%`,\n      left: `${Math.random() * 100}%`,\n      width: `${Math.random() * 20 + 10}%`,\n      height: `${Math.random() * 5 + 2}px`,\n      color: colors[Math.floor(Math.random() * colors.length)],\n    };\n    setGlitches(prev => [...prev, newGlitch]);\n    setTimeout(() => {\n      setGlitches(prev => prev.filter(glitch => glitch.id !== newGlitch.id));\n    }, 150);\n  }, []);\n\n  const createWaveform = useCallback(() => {\n    const newWaveform = {\n      id: Date.now(),\n      bottom: `${Math.random() * 20}%`,\n      color: colors[Math.floor(Math.random() * colors.length)],\n    };\n    setWaveforms(prev => [...prev, newWaveform]);\n    setTimeout(() => {\n      setWaveforms(prev => prev.filter(wave => wave.id !== newWaveform.id));\n    }, 3000);\n  }, []);\n\n  useEffect(() => {\n    if (!isActive) return;\n\n    const gridInterval = setInterval(createGridLine, 200);\n    const pulseInterval = setInterval(createPulse, 500);\n    const glitchInterval = setInterval(createGlitch, 100);\n    const waveformInterval = setInterval(createWaveform, 1000);\n\n    return () => {\n      clearInterval(gridInterval);\n      clearInterval(pulseInterval);\n      clearInterval(glitchInterval);\n      clearInterval(waveformInterval);\n    };\n  }, [isActive, createGridLine, createPulse, createGlitch, createWaveform]);\n\n  if (!isActive) return null;\n\n  return (\n    <div className=\"party-mode techno\">\n      {gridLines.map(line => (\n        <div\n          key={line.id}\n          className={`grid-line ${line.isHorizontal ? 'horizontal' : 'vertical'}`}\n          style={{\n            [line.isHorizontal ? 'top' : 'left']: line.position,\n            backgroundColor: line.color,\n          }}\n        />\n      ))}\n      {pulses.map(pulse => (\n        <div\n          key={pulse.id}\n          className=\"pulse\"\n          style={{\n            left: `${pulse.x}%`,\n            top: `${pulse.y}%`,\n            width: `${pulse.size}px`,\n            height: `${pulse.size}px`,\n            borderColor: pulse.color,\n          }}\n        />\n      ))}\n      {glitches.map(glitch => (\n        <div\n          key={glitch.id}\n          className=\"glitch\"\n          style={{\n            top: glitch.top,\n            left: glitch.left,\n            width: glitch.width,\n            height: glitch.height,\n            backgroundColor: glitch.color,\n          }}\n        />\n      ))}\n      {waveforms.map(wave => (\n        <div\n          key={wave.id}\n          className=\"waveform\"\n          style={{\n            bottom: wave.bottom,\n            backgroundColor: wave.color,\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PartyMode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}