{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio\\\\Desktop\\\\RiffRider\\\\src\\\\client\\\\src\\\\components\\\\GlitchText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlitchText = ({\n  text\n}) => {\n  _s();\n  const [glitchedText, setGlitchedText] = useState(text);\n  useEffect(() => {\n    const glitchInterval = setInterval(() => {\n      if (Math.random() < 0.1) {\n        const glitchDuration = 100 + Math.random() * 100;\n        setGlitchedText(text.split('').map(char => Math.random() < 0.5 ? String.fromCharCode(char.charCodeAt(0) + Math.floor(Math.random() * 10) - 5) : char).join(''));\n        setTimeout(() => setGlitchedText(text), glitchDuration);\n      }\n    }, 2000);\n    return () => clearInterval(glitchInterval);\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"glitch-text\",\n    children: glitchedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(GlitchText, \"qdtM0k93Eo9+hOQ2x0su4Qdm8N8=\");\n_c = GlitchText;\nexport default GlitchText;\nvar _c;\n$RefreshReg$(_c, \"GlitchText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GlitchText","text","_s","glitchedText","setGlitchedText","glitchInterval","setInterval","Math","random","glitchDuration","split","map","char","String","fromCharCode","charCodeAt","floor","join","setTimeout","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sergio/Desktop/RiffRider/src/client/src/components/GlitchText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst GlitchText = ({ text }) => {\r\n  const [glitchedText, setGlitchedText] = useState(text);\r\n\r\n  useEffect(() => {\r\n    const glitchInterval = setInterval(() => {\r\n      if (Math.random() < 0.1) {\r\n        const glitchDuration = 100 + Math.random() * 100;\r\n        setGlitchedText(text.split('').map(char => \r\n          Math.random() < 0.5 ? String.fromCharCode(char.charCodeAt(0) + Math.floor(Math.random() * 10) - 5) : char\r\n        ).join(''));\r\n        setTimeout(() => setGlitchedText(text), glitchDuration);\r\n      }\r\n    }, 2000);\r\n\r\n    return () => clearInterval(glitchInterval);\r\n  }, [text]);\r\n\r\n  return <span className=\"glitch-text\">{glitchedText}</span>;\r\n};\r\n\r\nexport default GlitchText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAACK,IAAI,CAAC;EAEtDJ,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QACvB,MAAMC,cAAc,GAAG,GAAG,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QAChDJ,eAAe,CAACH,IAAI,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAACC,IAAI,IACrCL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAGK,MAAM,CAACC,YAAY,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,GAAGR,IAAI,CAACS,KAAK,CAACT,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAGI,IACvG,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,CAAC;QACXC,UAAU,CAAC,MAAMd,eAAe,CAACH,IAAI,CAAC,EAAEQ,cAAc,CAAC;MACzD;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMU,aAAa,CAACd,cAAc,CAAC;EAC5C,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAMqB,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAElB;EAAY;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC5D,CAAC;AAACvB,EAAA,CAlBIF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}