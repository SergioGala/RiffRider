{"ast":null,"code":"var _jsxFileName = \"/workspaces/RiffRider/src/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport SearchBar from './components/SearchBar';\nimport SongList from './components/SongList';\nimport Pagination from './components/Pagination';\nimport Sorting from './components/Sorting';\nimport LoadingIndicator from './components/LoadingIndicator';\nimport TechnoLines from './components/TechnoLines';\nimport PartyMode from './components/PartyMode';\nimport GlitchText from './components/GlitchText';\nimport SuggestionQueue from './components/SuggestionQueue';\nimport DjInterface from './components/DjInterface';\nimport AudioPlayer from './components/AudioPlayer';\nimport AudioVisualizer from './components/AudioVisualizer';\nimport InternetConnectionCheck from './components/InternetConnectionCheck';\nimport { submitSongRequest, getRequestQueue } from './services/SongRequestService';\nimport { authorizeSpotify, setAccessToken, searchTracks } from './services/SpotifyService';\nimport { themes } from './components/themes';\nimport './App.css';\nimport './animations.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [songsPerPage] = useState(10);\n  const [sortCriteria, setSortCriteria] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPartyMode, setIsPartyMode] = useState(false);\n  const [userId] = useState(() => 'user_' + Math.random().toString(36).substr(2, 9));\n  const [requestQueue, setRequestQueue] = useState([]);\n  const [isDjMode, setIsDjMode] = useState(false);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [currentTheme, setCurrentTheme] = useState('pop');\n  const [showAllThemes, setShowAllThemes] = useState(false);\n  useEffect(() => {\n    const hash = window.location.hash.substring(1).split('&').reduce((initial, item) => {\n      if (item) {\n        var parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n      return initial;\n    }, {});\n    if (hash.access_token) {\n      setSpotifyToken(hash.access_token);\n      setAccessToken(hash.access_token);\n      window.location.hash = '';\n    }\n    const fetchRequestQueue = async () => {\n      const queue = await getRequestQueue();\n      setRequestQueue(queue);\n    };\n    fetchRequestQueue();\n    const queueInterval = setInterval(fetchRequestQueue, 30000);\n    return () => {\n      clearInterval(queueInterval);\n    };\n  }, []);\n  useEffect(() => {\n    const theme = themes[currentTheme];\n    Object.keys(theme).forEach(key => {\n      document.documentElement.style.setProperty(`--${key}`, theme[key]);\n    });\n    document.body.classList.add('theme-transition');\n    setTimeout(() => {\n      document.body.classList.remove('theme-transition');\n    }, 300);\n\n    // Dispatch a custom event for theme change\n    window.dispatchEvent(new CustomEvent('themechange', {\n      detail: {\n        theme: currentTheme\n      }\n    }));\n  }, [currentTheme]);\n  const handleSearch = async term => {\n    setSearchTerm(term);\n    if (!term.trim()) {\n      console.log('Search term is empty, not performing search.');\n      setSongs([]);\n      setIsLoading(false);\n      return;\n    }\n    if (spotifyToken) {\n      setIsLoading(true);\n      try {\n        console.log('Initiating search with term:', term);\n        const results = await searchTracks(term);\n        console.log('Results received in App.js:', JSON.stringify(results, null, 2));\n        if (Array.isArray(results) && results.length > 0) {\n          setSongs(results);\n          setCurrentPage(1);\n        } else {\n          console.log('No songs found or empty array returned');\n          setSongs([]);\n        }\n      } catch (error) {\n        console.error('Error in handleSearch:', error);\n        setSongs([]);\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      console.error('No Spotify token available. Please authenticate first.');\n    }\n  };\n  const sortSongs = useCallback((songsToSort, criteria, order) => {\n    return [...songsToSort].sort((a, b) => {\n      let valueA, valueB;\n      switch (criteria) {\n        case 'name':\n          valueA = a.name.toLowerCase();\n          valueB = b.name.toLowerCase();\n          break;\n        case 'artists':\n          valueA = a.artists.toLowerCase();\n          valueB = b.artists.toLowerCase();\n          break;\n        case 'album':\n          valueA = a.album.toLowerCase();\n          valueB = b.album.toLowerCase();\n          break;\n        default:\n          valueA = a.name.toLowerCase();\n          valueB = b.name.toLowerCase();\n      }\n      if (valueA < valueB) return order === 'asc' ? -1 : 1;\n      if (valueA > valueB) return order === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }, []);\n  const sortedSongs = useCallback(() => {\n    return sortSongs(songs, sortCriteria, sortOrder);\n  }, [songs, sortCriteria, sortOrder, sortSongs]);\n  const getCurrentSongs = useCallback(() => {\n    const indexOfLastSong = currentPage * songsPerPage;\n    const indexOfFirstSong = indexOfLastSong - songsPerPage;\n    return sortedSongs().slice(indexOfFirstSong, indexOfLastSong);\n  }, [currentPage, songsPerPage, sortedSongs]);\n  const totalPages = Math.ceil(sortedSongs().length / songsPerPage);\n  const handlePageChange = useCallback(pageNumber => {\n    setCurrentPage(pageNumber);\n  }, []);\n  const handleSuggestSong = async song => {\n    try {\n      const request = {\n        songTitle: song.name,\n        artistName: song.artists,\n        album: song.album,\n        album_image: song.album_image\n      };\n      await submitSongRequest(request, userId);\n      const updatedQueue = await getRequestQueue();\n      setRequestQueue(updatedQueue);\n    } catch (error) {\n      console.error('Error suggesting song:', error);\n    }\n  };\n  const playSong = song => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n  const closeAudioPlayer = () => {\n    setCurrentSong(null);\n    setIsPlaying(false);\n  };\n  const changeTheme = genre => {\n    setCurrentTheme(genre);\n    setShowAllThemes(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App fade-in\",\n    style: {\n      backgroundColor: `var(--background)`,\n      color: `var(--text)`\n    },\n    children: [/*#__PURE__*/_jsxDEV(InternetConnectionCheck, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TechnoLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PartyMode, {\n      isActive: isPartyMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: /*#__PURE__*/_jsxDEV(GlitchText, {\n        text: \"\\uD83C\\uDFA7 YouDJ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioVisualizer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAllThemes(!showAllThemes),\n        className: \"theme-button show-all-themes\",\n        children: showAllThemes ? 'Ocultar temas' : 'Mostrar todos los temas'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), (showAllThemes ? Object.keys(themes) : Object.keys(themes).slice(0, 5)).map(theme => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeTheme(theme),\n        className: `theme-button ${currentTheme === theme ? 'active glow-pulse' : ''}`,\n        children: theme\n      }, theme, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), !spotifyToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: authorizeSpotify,\n      className: \"spotify-auth-button\",\n      children: \"Conectar con Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPartyMode(!isPartyMode),\n        className: \"party-mode-toggle\",\n        children: [isPartyMode ? 'Desactivar' : 'Activar', \" Modo Fiesta\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsDjMode(!isDjMode),\n        className: \"dj-mode-toggle\",\n        children: isDjMode ? 'Modo Usuario' : 'Modo DJ'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), isDjMode ? /*#__PURE__*/_jsxDEV(DjInterface, {\n        currentSong: currentSong,\n        onPlaySong: playSong,\n        requestQueue: requestQueue,\n        setRequestQueue: setRequestQueue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          searchTerm: searchTerm,\n          setSearchTerm: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Sorting, {\n          sortCriteria: sortCriteria,\n          setSortCriteria: setSortCriteria,\n          sortOrder: sortOrder,\n          setSortOrder: setSortOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this) : sortedSongs().length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SongList, {\n            songs: getCurrentSongs(),\n            onPlaySong: playSong,\n            onSuggestSong: handleSuggestSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            currentPage: currentPage,\n            totalPages: totalPages,\n            onPageChange: handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(SuggestionQueue, {\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), currentSong && /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        audioSrc: currentSong.preview_url,\n        songTitle: currentSong.name,\n        artistName: currentSong.artists,\n        isPlaying: isPlaying,\n        setIsPlaying: setIsPlaying,\n        onClose: closeAudioPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+DIIZOCKa+th5LoeOB7VwCDau5o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","SearchBar","SongList","Pagination","Sorting","LoadingIndicator","TechnoLines","PartyMode","GlitchText","SuggestionQueue","DjInterface","AudioPlayer","AudioVisualizer","InternetConnectionCheck","submitSongRequest","getRequestQueue","authorizeSpotify","setAccessToken","searchTracks","themes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchTerm","setSearchTerm","songs","setSongs","currentPage","setCurrentPage","songsPerPage","sortCriteria","setSortCriteria","sortOrder","setSortOrder","isLoading","setIsLoading","isPartyMode","setIsPartyMode","userId","Math","random","toString","substr","requestQueue","setRequestQueue","isDjMode","setIsDjMode","currentSong","setCurrentSong","isPlaying","setIsPlaying","spotifyToken","setSpotifyToken","currentTheme","setCurrentTheme","showAllThemes","setShowAllThemes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","fetchRequestQueue","queue","queueInterval","setInterval","clearInterval","theme","Object","keys","forEach","key","document","documentElement","style","setProperty","body","classList","add","setTimeout","remove","dispatchEvent","CustomEvent","detail","handleSearch","term","trim","console","log","results","JSON","stringify","Array","isArray","length","error","sortSongs","songsToSort","criteria","order","sort","a","b","valueA","valueB","name","toLowerCase","artists","album","sortedSongs","getCurrentSongs","indexOfLastSong","indexOfFirstSong","slice","totalPages","ceil","handlePageChange","pageNumber","handleSuggestSong","song","request","songTitle","artistName","album_image","updatedQueue","playSong","closeAudioPlayer","changeTheme","genre","className","backgroundColor","color","children","fileName","_jsxFileName","lineNumber","columnNumber","isActive","text","onClick","map","onPlaySong","onSuggestSong","onPageChange","audioSrc","preview_url","onClose","_c","$RefreshReg$"],"sources":["/workspaces/RiffRider/src/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport SearchBar from './components/SearchBar';\nimport SongList from './components/SongList';\nimport Pagination from './components/Pagination';\nimport Sorting from './components/Sorting';\nimport LoadingIndicator from './components/LoadingIndicator';\nimport TechnoLines from './components/TechnoLines';\nimport PartyMode from './components/PartyMode';\nimport GlitchText from './components/GlitchText';\nimport SuggestionQueue from './components/SuggestionQueue';\nimport DjInterface from './components/DjInterface';\nimport AudioPlayer from './components/AudioPlayer';\nimport AudioVisualizer from './components/AudioVisualizer';\nimport InternetConnectionCheck from './components/InternetConnectionCheck';\nimport { submitSongRequest, getRequestQueue } from './services/SongRequestService';\nimport { authorizeSpotify, setAccessToken, searchTracks } from './services/SpotifyService';\nimport { themes } from './components/themes';\nimport './App.css';\nimport './animations.css';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [songsPerPage] = useState(10);\n  const [sortCriteria, setSortCriteria] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPartyMode, setIsPartyMode] = useState(false);\n  const [userId] = useState(() => 'user_' + Math.random().toString(36).substr(2, 9));\n  const [requestQueue, setRequestQueue] = useState([]);\n  const [isDjMode, setIsDjMode] = useState(false);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [currentTheme, setCurrentTheme] = useState('pop');\n  const [showAllThemes, setShowAllThemes] = useState(false);\n\n  useEffect(() => {\n    const hash = window.location.hash\n      .substring(1)\n      .split('&')\n      .reduce((initial, item) => {\n        if (item) {\n          var parts = item.split('=');\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n      }, {});\n\n    if (hash.access_token) {\n      setSpotifyToken(hash.access_token);\n      setAccessToken(hash.access_token);\n      window.location.hash = '';\n    }\n\n    const fetchRequestQueue = async () => {\n      const queue = await getRequestQueue();\n      setRequestQueue(queue);\n    };\n\n    fetchRequestQueue();\n    const queueInterval = setInterval(fetchRequestQueue, 30000);\n\n    return () => {\n      clearInterval(queueInterval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const theme = themes[currentTheme];\n    Object.keys(theme).forEach(key => {\n      document.documentElement.style.setProperty(`--${key}`, theme[key]);\n    });\n    document.body.classList.add('theme-transition');\n    setTimeout(() => {\n      document.body.classList.remove('theme-transition');\n    }, 300);\n\n    // Dispatch a custom event for theme change\n    window.dispatchEvent(new CustomEvent('themechange', { detail: { theme: currentTheme } }));\n  }, [currentTheme]);\n\n  const handleSearch = async (term) => {\n    setSearchTerm(term);\n    if (!term.trim()) {\n      console.log('Search term is empty, not performing search.');\n      setSongs([]);\n      setIsLoading(false);\n      return;\n    }\n    if (spotifyToken) {\n      setIsLoading(true);\n      try {\n        console.log('Initiating search with term:', term);\n        const results = await searchTracks(term);\n        console.log('Results received in App.js:', JSON.stringify(results, null, 2));\n        if (Array.isArray(results) && results.length > 0) {\n          setSongs(results);\n          setCurrentPage(1);\n        } else {\n          console.log('No songs found or empty array returned');\n          setSongs([]);\n        }\n      } catch (error) {\n        console.error('Error in handleSearch:', error);\n        setSongs([]);\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      console.error('No Spotify token available. Please authenticate first.');\n    }\n  };\n\n  const sortSongs = useCallback((songsToSort, criteria, order) => {\n    return [...songsToSort].sort((a, b) => {\n      let valueA, valueB;\n\n      switch (criteria) {\n        case 'name':\n          valueA = a.name.toLowerCase();\n          valueB = b.name.toLowerCase();\n          break;\n        case 'artists':\n          valueA = a.artists.toLowerCase();\n          valueB = b.artists.toLowerCase();\n          break;\n        case 'album':\n          valueA = a.album.toLowerCase();\n          valueB = b.album.toLowerCase();\n          break;\n        default:\n          valueA = a.name.toLowerCase();\n          valueB = b.name.toLowerCase();\n      }\n\n      if (valueA < valueB) return order === 'asc' ? -1 : 1;\n      if (valueA > valueB) return order === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }, []);\n\n  const sortedSongs = useCallback(() => {\n    return sortSongs(songs, sortCriteria, sortOrder);\n  }, [songs, sortCriteria, sortOrder, sortSongs]);\n\n  const getCurrentSongs = useCallback(() => {\n    const indexOfLastSong = currentPage * songsPerPage;\n    const indexOfFirstSong = indexOfLastSong - songsPerPage;\n    return sortedSongs().slice(indexOfFirstSong, indexOfLastSong);\n  }, [currentPage, songsPerPage, sortedSongs]);\n\n  const totalPages = Math.ceil(sortedSongs().length / songsPerPage);\n\n  const handlePageChange = useCallback((pageNumber) => {\n    setCurrentPage(pageNumber);\n  }, []);\n\n  const handleSuggestSong = async (song) => {\n    try {\n      const request = {\n        songTitle: song.name,\n        artistName: song.artists,\n        album: song.album,\n        album_image: song.album_image\n      };\n      await submitSongRequest(request, userId);\n      const updatedQueue = await getRequestQueue();\n      setRequestQueue(updatedQueue);\n    } catch (error) {\n      console.error('Error suggesting song:', error);\n    }\n  };\n\n  const playSong = (song) => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n\n  const closeAudioPlayer = () => {\n    setCurrentSong(null);\n    setIsPlaying(false);\n  };\n\n  const changeTheme = (genre) => {\n    setCurrentTheme(genre);\n    setShowAllThemes(false);\n  };\n\n  return (\n    <div className=\"App fade-in\" style={{ backgroundColor: `var(--background)`, color: `var(--text)` }}>\n      <InternetConnectionCheck />\n      <TechnoLines />\n      <PartyMode isActive={isPartyMode} />\n      <h1 className=\"app-title\"><GlitchText text=\"🎧 YouDJ\" /></h1>\n      <AudioVisualizer />\n      <div className=\"theme-selector\">\n        <button \n          onClick={() => setShowAllThemes(!showAllThemes)} \n          className=\"theme-button show-all-themes\"\n        >\n          {showAllThemes ? 'Ocultar temas' : 'Mostrar todos los temas'}\n        </button>\n        {(showAllThemes ? Object.keys(themes) : Object.keys(themes).slice(0, 5)).map(theme => (\n          <button \n            key={theme} \n            onClick={() => changeTheme(theme)} \n            className={`theme-button ${currentTheme === theme ? 'active glow-pulse' : ''}`}\n          >\n            {theme}\n          </button>\n        ))}\n      </div>\n      {!spotifyToken ? (\n        <button onClick={authorizeSpotify} className=\"spotify-auth-button\">\n          Conectar con Spotify\n        </button>\n      ) : (\n        <>\n          <button onClick={() => setIsPartyMode(!isPartyMode)} className=\"party-mode-toggle\">\n            {isPartyMode ? 'Desactivar' : 'Activar'} Modo Fiesta\n          </button>\n          <button onClick={() => setIsDjMode(!isDjMode)} className=\"dj-mode-toggle\">\n            {isDjMode ? 'Modo Usuario' : 'Modo DJ'}\n          </button>\n          {isDjMode ? (\n            <DjInterface \n              currentSong={currentSong} \n              onPlaySong={playSong}\n              requestQueue={requestQueue}\n              setRequestQueue={setRequestQueue}\n            />\n          ) : (\n            <>\n              <SearchBar searchTerm={searchTerm} setSearchTerm={handleSearch} />\n              <Sorting \n                sortCriteria={sortCriteria} \n                setSortCriteria={setSortCriteria}\n                sortOrder={sortOrder}\n                setSortOrder={setSortOrder}\n              />\n              {isLoading ? (\n                <LoadingIndicator />\n              ) : (\n                sortedSongs().length > 0 && (\n                  <>\n                    <SongList \n                      songs={getCurrentSongs()} \n                      onPlaySong={playSong} \n                      onSuggestSong={handleSuggestSong}\n                    />\n                    <Pagination \n                      currentPage={currentPage}\n                      totalPages={totalPages}\n                      onPageChange={handlePageChange}\n                    />\n                  </>\n                )\n              )}\n              <SuggestionQueue userId={userId} />\n            </>\n          )}\n          {currentSong && (\n            <AudioPlayer \n              audioSrc={currentSong.preview_url}\n              songTitle={currentSong.name}\n              artistName={currentSong.artists}\n              isPlaying={isPlaying}\n              setIsPlaying={setIsPlaying}\n              onClose={closeAudioPlayer}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}