{"ast":null,"code":"import SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\n// Reemplaza con tus propias credenciales de Spotify\nconst CLIENT_ID = '49df6bb3f924476ab1cdb09d58880d7b';\nconst REDIRECT_URI = 'https://redesigned-bassoon-vx977vg5p5fw97x-3000.app.github.dev/';\nexport const authorizeSpotify = () => {\n  const scopes = ['user-read-private', 'user-read-email', 'user-read-playback-state', 'user-modify-playback-state', 'streaming'];\n  const url = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\n  window.location.href = url;\n};\nexport const setAccessToken = token => {\n  console.log('Setting access token:', token);\n  if (token) {\n    spotifyApi.setAccessToken(token);\n  } else {\n    console.error('No token provided to setAccessToken');\n  }\n};\nexport const searchTracks = async query => {\n  if (!spotifyApi.getAccessToken()) {\n    console.error('No access token set. Please authenticate first.');\n    throw new Error('No access token set. Please authenticate first.');\n  }\n  if (!query.trim()) {\n    console.error('Empty search query');\n    return [];\n  }\n  try {\n    console.log('Searching tracks with query:', query);\n    const response = await spotifyApi.searchTracks(query, {\n      limit: 20\n    });\n    console.log('Raw Spotify API response:', JSON.stringify(response, null, 2));\n    if (response && response.tracks && Array.isArray(response.tracks.items)) {\n      const formattedResults = response.tracks.items.map(track => {\n        var _track$album$images$;\n        return {\n          id: track.id,\n          name: track.name,\n          artists: track.artists.map(artist => artist.name).join(', '),\n          album: track.album.name,\n          preview_url: track.preview_url,\n          album_image: (_track$album$images$ = track.album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url\n        };\n      });\n      console.log('Formatted results:', JSON.stringify(formattedResults, null, 2));\n      return formattedResults;\n    } else {\n      console.error('Unexpected response structure:', JSON.stringify(response, null, 2));\n      return [];\n    }\n  } catch (error) {\n    console.error('Error searching tracks:', error);\n    if (error.status === 401) {\n      console.error('Unauthorized: Token may have expired');\n    }\n    throw error;\n  }\n};\nexport const getTrack = async trackId => {\n  try {\n    return await spotifyApi.getTrack(trackId);\n  } catch (error) {\n    console.error('Error getting track:', error);\n    return null;\n  }\n};\nexport const playTrack = async trackUri => {\n  try {\n    await spotifyApi.play({\n      uris: [trackUri]\n    });\n  } catch (error) {\n    console.error('Error playing track:', error);\n  }\n};\nexport const pausePlayback = async () => {\n  try {\n    await spotifyApi.pause();\n  } catch (error) {\n    console.error('Error pausing playback:', error);\n  }\n};\nexport const resumePlayback = async () => {\n  try {\n    await spotifyApi.play();\n  } catch (error) {\n    console.error('Error resuming playback:', error);\n  }\n};\nexport const skipToNext = async () => {\n  try {\n    await spotifyApi.skipToNext();\n  } catch (error) {\n    console.error('Error skipping to next track:', error);\n  }\n};\nexport const skipToPrevious = async () => {\n  try {\n    await spotifyApi.skipToPrevious();\n  } catch (error) {\n    console.error('Error skipping to previous track:', error);\n  }\n};","map":{"version":3,"names":["SpotifyWebApi","spotifyApi","CLIENT_ID","REDIRECT_URI","authorizeSpotify","scopes","url","join","window","location","href","setAccessToken","token","console","log","error","searchTracks","query","getAccessToken","Error","trim","response","limit","JSON","stringify","tracks","Array","isArray","items","formattedResults","map","track","_track$album$images$","id","name","artists","artist","album","preview_url","album_image","images","status","getTrack","trackId","playTrack","trackUri","play","uris","pausePlayback","pause","resumePlayback","skipToNext","skipToPrevious"],"sources":["/workspaces/RiffRider/src/client/src/services/SpotifyService.js"],"sourcesContent":["import SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\n// Reemplaza con tus propias credenciales de Spotify\nconst CLIENT_ID = '49df6bb3f924476ab1cdb09d58880d7b';\nconst REDIRECT_URI = 'https://redesigned-bassoon-vx977vg5p5fw97x-3000.app.github.dev/';\n\nexport const authorizeSpotify = () => {\n  const scopes = [\n    'user-read-private',\n    'user-read-email',\n    'user-read-playback-state',\n    'user-modify-playback-state',\n    'streaming'\n  ];\n\n  const url = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\n  window.location.href = url;\n};\n\nexport const setAccessToken = (token) => {\n  console.log('Setting access token:', token);\n  if (token) {\n    spotifyApi.setAccessToken(token);\n  } else {\n    console.error('No token provided to setAccessToken');\n  }\n};\n\nexport const searchTracks = async (query) => {\n  if (!spotifyApi.getAccessToken()) {\n    console.error('No access token set. Please authenticate first.');\n    throw new Error('No access token set. Please authenticate first.');\n  }\n  if (!query.trim()) {\n    console.error('Empty search query');\n    return [];\n  }\n  try {\n    console.log('Searching tracks with query:', query);\n    const response = await spotifyApi.searchTracks(query, { limit: 20 });\n    console.log('Raw Spotify API response:', JSON.stringify(response, null, 2));\n    \n    if (response && response.tracks && Array.isArray(response.tracks.items)) {\n      const formattedResults = response.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artists: track.artists.map(artist => artist.name).join(', '),\n        album: track.album.name,\n        preview_url: track.preview_url,\n        album_image: track.album.images[0]?.url\n      }));\n      console.log('Formatted results:', JSON.stringify(formattedResults, null, 2));\n      return formattedResults;\n    } else {\n      console.error('Unexpected response structure:', JSON.stringify(response, null, 2));\n      return [];\n    }\n  } catch (error) {\n    console.error('Error searching tracks:', error);\n    if (error.status === 401) {\n      console.error('Unauthorized: Token may have expired');\n    }\n    throw error;\n  }\n};\nexport const getTrack = async (trackId) => {\n  try {\n    return await spotifyApi.getTrack(trackId);\n  } catch (error) {\n    console.error('Error getting track:', error);\n    return null;\n  }\n};\n\nexport const playTrack = async (trackUri) => {\n  try {\n    await spotifyApi.play({ uris: [trackUri] });\n  } catch (error) {\n    console.error('Error playing track:', error);\n  }\n};\n\nexport const pausePlayback = async () => {\n  try {\n    await spotifyApi.pause();\n  } catch (error) {\n    console.error('Error pausing playback:', error);\n  }\n};\n\nexport const resumePlayback = async () => {\n  try {\n    await spotifyApi.play();\n  } catch (error) {\n    console.error('Error resuming playback:', error);\n  }\n};\n\nexport const skipToNext = async () => {\n  try {\n    await spotifyApi.skipToNext();\n  } catch (error) {\n    console.error('Error skipping to next track:', error);\n  }\n};\n\nexport const skipToPrevious = async () => {\n  try {\n    await spotifyApi.skipToPrevious();\n  } catch (error) {\n    console.error('Error skipping to previous track:', error);\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}